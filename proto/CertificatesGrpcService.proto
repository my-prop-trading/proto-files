syntax = "proto3";
package certificates;
import "google/protobuf/empty.proto";

enum CertificateType {
  MaxAllocation = 0;
  EvaluationPhase1 = 1; 
  EvaluationPhase2 = 2; 
  EvaluationPhase3 = 3;
  EvaluationLiveAccount = 4;
  OverallPayout = 5;
  PayoutByMonth = 6; 
  PayoutByTxID = 7;
}

message Certificate {
  string id = 1;
  int64 createdAt = 2;
  certificates.CertificateType type = 3;
  string client_id = 4;
  optional string tx_id = 5;
  optional string trader_account_id = 6;
}

message CertificateTemplate {
  certificates.CertificateType type = 1;
  string content = 2;
}

message GetPaginatedRequest {
  uint64 limit = 1;
  int64 offset = 2;
  optional string tx_id = 3;
  optional int64 date_to = 4;
  optional certificates.CertificateType type = 5;
  optional string client_id = 6;
  optional int64 date_from = 7;
}

message GetPaginatedResponse {
  repeated certificates.Certificate certificates = 1;
  uint64 total = 2;
}

message GetResourceRequest { string id = 1; }

message GetResourceResponse {
  bytes content = 1;
}

message GetTemplateRequest {
  certificates.CertificateType type = 1;
}

message GetTemplateResponse {
  certificates.CertificateTemplate template = 1;
}

message EditTemplateRequest {
  certificates.CertificateTemplate template = 1;
}

message EditTemplateResponse {
  certificates.CertificateTemplate template = 1;
}

message CreateTemplateRequest {
  certificates.CertificateTemplate template = 1;
}

message CreateTemplateResponse {
  certificates.CertificateTemplate template = 1;
}

message QrCode {
  uint32 width = 2;
  uint32 height = 3;
  uint32 x = 4;
  uint32 y = 5;
}

message GetQrCodeRequest {
}

message GetQrCodeResponse {
  certificates.QrCode qr_code = 1;
}

message CreateQrCodeRequest {
  certificates.QrCode qr_code = 1;
}

message CreateQrCodeResponse {
  certificates.QrCode qr_code = 1;
}

message EditQrCodeRequest {
  certificates.QrCode qr_code = 1;
}

message EditQrCodeResponse {
  certificates.QrCode qr_code = 1;
}

message HtmlMetadata {
  string title = 1;
  string description = 2;
  string link_to_app = 3;
  string site_name = 4;
  string text_to_share_in_sn = 5;
}

message GetHtmlMetadataRequest {
}

message GetHtmlMetadataResponse {
  HtmlMetadata metadata = 1;
}

message SetHtmlMetadataRequest {
  HtmlMetadata metadata = 1;
}

message SetHtmlMetadataResponse {
  HtmlMetadata metadata = 1;
}

service CertificatesGrpcService {
  //rpc GetInfoById(certificates.GetInfoByIdRequest) returns (certificates.GetInfoByIdResponse);
  rpc GetPaginated(certificates.GetPaginatedRequest) returns (certificates.GetPaginatedResponse);
  rpc GetResource(certificates.GetResourceRequest) returns (stream certificates.GetResourceResponse);
  rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);

  // Template management RPCs
  rpc GetTemplate(certificates.GetTemplateRequest) returns (certificates.GetTemplateResponse);
  rpc EditTemplate(certificates.EditTemplateRequest) returns (certificates.EditTemplateResponse);
  rpc CreateTemplate(certificates.CreateTemplateRequest) returns (certificates.CreateTemplateResponse);

  // QR code management RPCs
  rpc GetQrCode(certificates.GetQrCodeRequest) returns (certificates.GetQrCodeResponse);
  rpc CreateQrCode(certificates.CreateQrCodeRequest) returns (certificates.CreateQrCodeResponse);
  rpc EditQrCode(certificates.EditQrCodeRequest) returns (certificates.EditQrCodeResponse);

  // For Html Shared
  rpc GetHtmlMetadata(certificates.GetHtmlMetadataRequest) returns (certificates.GetHtmlMetadataResponse);
  rpc SetHtmlMetadata(certificates.SetHtmlMetadataRequest) returns (certificates.SetHtmlMetadataResponse);
}
