syntax = "proto3";
package woocoommerce_integration;
import "google/protobuf/empty.proto";

message CreateOrderRequest {
    woocoommerce_integration.ContactDetails billing = 1;
    repeated woocoommerce_integration.MetaData meta_data = 2;
    string trader_package_id = 3;
    optional string coupon_code = 4;
    repeated Addon addons = 5;
}

message Addon {
  string id = 1;
  double price = 2;
}

message MetaData {
    int32 id = 1;
    string key = 2;
    string value = 3;
}

message ContactDetails {
  string first_name = 1;
  string last_name = 2;
  string company = 3;
  string address_1 = 4;
  string address_2 = 5;
  string city = 6;
  string state = 7;
  string postcode = 8;
  string country = 9;
  string email = 10;
  string phone = 11;
}

message Coupon {
    int32 id = 1;
    string code = 2;
    string amount = 3;
    int64 date_created = 4;
    int64 date_created_gmt = 5;
    int64 date_modified = 6;
    int64 date_modified_gmt = 7;
    DiscountType discount_type = 8;
    string description = 9;
    int64 date_expires = 10; // Note: Use empty string to represent None
    int64 date_expires_gmt = 11; // Note: Use empty string to represent None
    int32 usage_count = 12;
    bool individual_use = 13;
    //repeated int32 product_ids = 14;
    //repeated int32 excluded_product_ids = 15;
    optional int32 usage_limit = 16; 
    repeated string trader_package_ids = 17;
}


enum DiscountType {
    FIXED_CART = 0; // default
    PERCENT = 1;
    FIXED_PRODUCT = 2;
}

message CreateOrderResponse {
  oneof response { 
    CreateOrderResponseInternal order = 1;
    woocoommerce_integration.WooCommerceIntegrationError error = 2;
  }
}

message CreateOrderResponseInternal {
  string payment_url = 1;
  int32 order_id = 2;
}


message CreateCouponRequest {
  string code = 1;
  string amount = 2;
  DiscountType discount_type = 3;
  string description = 4;
  optional int64 date_expires_gmt = 5; // Note: Use empty string to represent None
  bool individual_use = 6;
  repeated string trader_packages_ids = 7;
  optional int32 usage_limit = 8; // Note: Use 0 or a specific negative value to represent None
}


message CreateCouponResponse {
  oneof response { 
    woocoommerce_integration.Coupon coupon = 1;
    woocoommerce_integration.WooCommerceIntegrationError error = 2;
  }
}

message GetCouponRequest {
  uint32 id = 1;
}

message GetCouponResponse {
  oneof response { 
    woocoommerce_integration.Coupon coupon = 1;
    woocoommerce_integration.WooCommerceIntegrationError error = 2;
  }
}

message UpdateCouponRequest {
  woocoommerce_integration.Coupon coupon = 1;
}


message UpdateCouponResponse {
  oneof response { 
    woocoommerce_integration.Coupon coupon = 1;
    woocoommerce_integration.WooCommerceIntegrationError error = 2;
  }
}

message DeleteCouponRequest {
  uint32 id = 1;
}

message DeleteCouponResponse {
  oneof response { 
    woocoommerce_integration.Coupon coupon = 1;
    woocoommerce_integration.WooCommerceIntegrationError error = 2;
  }
}

message CloseOrderRequest {
  int32 order_id = 1;
}

message CloseOrderResponseInternal {
}

message CloseOrderResponse {
  oneof response {
    woocoommerce_integration.CloseOrderResponseInternal order = 1; 
    woocoommerce_integration.WooCommerceIntegrationError error = 2;
  }
}

message GetCouponsPaginatedRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message GetCouponsPaginatedResponse {
  repeated woocoommerce_integration.Coupon coupons = 1;
}

enum WooCommerceIntegrationError {
  TECHNICAL_ERROR = 0;
  ORDER_DOES_NOT_EXIST = 1;
  ORDER_ALREADY_CLOSED = 2;
  COUPON_DOES_NOT_EXIST = 3;
  COUPON_ALREADY_EXISTS = 4;
}

service WooCommerceIntegrationGrpcService {
    rpc CreateOrder(woocoommerce_integration.CreateOrderRequest) returns (woocoommerce_integration.CreateOrderResponse);

    rpc CloseOrder(woocoommerce_integration.CloseOrderRequest) returns (woocoommerce_integration.CloseOrderResponse);

    rpc CreateCoupon(woocoommerce_integration.CreateCouponRequest) returns (woocoommerce_integration.CreateCouponResponse);

    rpc UpdateCoupon(woocoommerce_integration.UpdateCouponRequest) returns (woocoommerce_integration.UpdateCouponResponse);

    rpc GetCoupon(woocoommerce_integration.GetCouponRequest) returns (woocoommerce_integration.GetCouponResponse);

    rpc DeleteCoupon(woocoommerce_integration.DeleteCouponRequest) returns (woocoommerce_integration.DeleteCouponResponse);

    rpc GetCouponsPaginated(woocoommerce_integration.GetCouponsPaginatedRequest) returns (woocoommerce_integration.GetCouponsPaginatedResponse);
   
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
