syntax = "proto3";
import "google/protobuf/empty.proto";
package clients_crm;

// Enumerations for various statuses

message CRMStatus {
    int64 id = 1;         // Unique identifier for the CRM status
    string name = 2;      // Name or description of the CRM status
}

enum CrmServiceError {
    TECH_ERROR = 0;
    MAX_TEMPLATES_REACHED = 1;
    CRM_STATUS_NOT_FOUND = 2;
    CRM_STATUS_ALREADY_EXISTS = 3;
    CRM_STATUS_HAS_CLIENTS = 4;
}

enum POIStatus {
    POI_NOT_REQUESTED = 0;
    POI_REQUESTED = 1;
    POI_PENDING = 2;
    POI_SUCCESS = 3;
    POI_FAIL = 4;
    POI_RETRY = 5;
}

enum POAStatus {
    POA_NOT_REQUESTED = 0;
    POA_REQUESTED = 1;
    POA_PENDING = 2;
    POA_SUCCESS = 3;
    POA_FAIL = 4;
    POA_RETRY = 5;
}

enum KYCStatus {
    KYC_NONE = 0;
    KYC_REQUESTED = 1;
    KYC_RETRY = 2;
    KYC_REJECTED = 3;
    KYC_SUCCESS = 4;
    KYC_PARTIAL = 5;
}

enum SortOrder {
    ASC = 0;
    DESC = 1;
}

enum UserProfileField {
    CLIENT_ID = 0;
    REGISTRATION_DATE = 1;
    CRM_STATUS = 3;
    FIRST_NAME_REG = 4;
    LAST_NAME_REG = 5;
    FIRST_NAME_KYC = 6;
    LAST_NAME_KYC = 7;
    EMAIL = 8;
    MANAGER = 9;
    COUNTRY_REG = 10;
    COUNTRY_REG_IP = 11;
    COUNTRY_POI = 12;
    COUNTRY_POA = 13;
    POI_STATUS = 14;
    POA_STATUS = 15;
    KYC_STATUS = 16;
}

message UserProfileFieldSortOrder {
    UserProfileField field = 1;
    SortOrder order = 2;
}

// Define a User Profile message
message UserProfile {
    string client_id = 1; // Link to the userâ€™s client profile
    int64 registration_date = 2; // Unix timestamp
    int64 crm_status = 3;
    string first_name_reg = 4;
    string last_name_reg = 5;
    string first_name_kyc = 6;
    string last_name_kyc = 7;
    string email = 8;
    string manager = 9; // Manager's name or ID
    string country_reg = 10;
    string country_reg_ip = 11;
    string country_poi = 12;
    string country_poa = 13;
    clients_crm.POIStatus poi_status = 14;
    clients_crm.POAStatus poa_status = 15;
    clients_crm.KYCStatus kyc_status = 16;
}

// Service for user profile operations
service ClientsCrmGrpcService {
    rpc GetUserProfile(GetUserProfileRequest) returns (GetUserProfileResponse);
    rpc SetUserProfile(SetUserProfileRequest) returns (SetUserProfileResponse);
    rpc SearchUserProfiles(SearchUserProfilesRequest) returns (SearchUserProfilesResponse);

    // Methods for CRM Status management
    rpc CreateCRMStatus(CreateCRMStatusRequest) returns (CreateCRMStatusResponse);
    rpc UpdateCRMStatus(UpdateCRMStatusRequest) returns (UpdateCRMStatusResponse);
    rpc RemoveCRMStatus(RemoveCRMStatusRequest) returns (RemoveCRMStatusResponse);
    rpc ListCRMStatuses(ListCRMStatusesRequest) returns (ListCRMStatusesResponse);

    //Methods for user profile field order
    rpc GetUserProfileVisibleFields(GetUserProfileVisibleFieldsRequest) returns (GetUserProfileVisibleFieldsResponse);
    rpc SetUserProfileVisibleFields(SetUserProfileVisibleFieldsRequest) returns (SetUserProfileVisibleFieldsResponse);

    //Templates
    rpc SaveReportTemplate(SaveReportTemplateRequest) returns (SaveReportTemplateResponse);
    // Retrieve a list of saved report templates.
    rpc GetReportTemplates(GetReportTemplatesRequest) returns (GetReportTemplatesResponse);
    // Delete a report template.
    rpc DeleteReportTemplate(DeleteReportTemplateRequest) returns (DeleteReportTemplateResponse);


    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}

// Request and Response messages
message GetUserProfileRequest {
    string client_id = 1;
}

message GetUserProfileResponse {
    UserProfile user_profile = 1;
}

message SetUserProfileRequest {
    string client_id = 1;
    UserProfile user_profile = 2;
}

message SetUserProfileResponse {
}

// Request and Response messages for SearchUserProfiles
message SearchUserProfilesRequest {
    // Filters (all optional, allowing for flexible search queries)
    optional int64 registration_date_from = 1;
    optional int64 registration_date_to = 2;
    optional int64 crm_status = 3;
    optional string first_name_reg = 4;
    optional string last_name_reg = 5;
    optional string first_name_kyc = 6;
    optional string last_name_kyc = 7;
    optional string email = 8;
    optional string manager = 9;
    optional string country_reg = 10;
    optional string country_reg_ip = 11;
    optional string country_poi = 12;
    optional string country_poa = 13;
    optional clients_crm.POIStatus poi_status = 14;
    optional clients_crm.POAStatus poa_status = 15;
    optional clients_crm.KYCStatus kyc_status = 16;

    uint64 limit = 17; // Maximum number of results to return
    uint64 offset = 18; // Offset of the first result to return

    optional string client_id = 19; // Client ID to search for

    repeated UserProfileFieldSortOrder order_by = 20; // List of fields to order by
}

message SearchUserProfilesResponse {
    repeated clients_crm.UserProfile user_profiles = 1; // List of user profiles matching the search criteria
}

// Request and Response messages for CRM Status management
message CreateCRMStatusRequest {
    string name = 1;
}

message CreateCRMStatusResponse {
    oneof response {
        clients_crm.CRMStatus status = 1; // The created CRM status
        CrmServiceError error = 2;
    }
}

message UpdateCRMStatusRequest {
    clients_crm.CRMStatus status = 1;
}

message UpdateCRMStatusResponse {
    oneof response {
        clients_crm.CRMStatus status = 1; // The created CRM status
        CrmServiceError error = 2;
    }
}

message RemoveCRMStatusRequest {
    int64 id = 1; // ID of the CRM status to remove
}

message RemoveCRMStatusResponse {
    oneof response {
        int64 id = 1; // ID of the CRM status that was removed
        CrmServiceError error = 2;
    }
}

message ListCRMStatusesRequest {
}

message ListCRMStatusesResponse {
    repeated clients_crm.CRMStatus statuses = 1; // List of all CRM statuses
}

// Request and Response messages for user profile field order
message GetUserProfileVisibleFieldsRequest {
    string officer_id = 1;
}

message UserProfileVisibleFields {
    bool registration_date_from = 1;
    bool registration_date_to = 2;
    bool crm_status = 3;
    bool first_name_reg = 4;
    bool last_name_reg = 5;
    bool first_name_kyc = 6;
    bool last_name_kyc = 7;
    bool email = 8;
    bool manager = 9;
    bool country_reg = 10;
    bool country_reg_ip = 11;
    bool country_poi = 12;
    bool country_poa = 13;
    bool poi_status = 14;
    bool poa_status = 15;
    bool kyc_status = 16;

    bool client_id = 19; // Client ID to search for
}

message GetUserProfileVisibleFieldsResponse {
    optional UserProfileVisibleFields user_profile_visible_fields = 1;
}

message SetUserProfileVisibleFieldsRequest {
    string officer_id = 1;
    UserProfileVisibleFields user_profile_visible_fields = 2;
}

message SetUserProfileVisibleFieldsResponse {
}

// Request message for saving a report template.
message SaveReportTemplateRequest {
  string officer_id = 1;
  UserProfileReportTemplate report_template = 3;
}

// Response message for saving a report template.
message SaveReportTemplateResponse {
    oneof response {
        UserProfileReportTemplate report_template = 1;
        CrmServiceError error = 2;
    }
}

// Request message for retrieving report templates.
message GetReportTemplatesRequest {
  string officer_id = 1;
}

// Response message for retrieving report templates.
message GetReportTemplatesResponse {
  repeated UserProfileReportTemplate templates = 1;
}

// Request message for deleting a report template.
message DeleteReportTemplateRequest {
  string title = 1;
  string officer_id = 2;
}

// Response message for deleting a report template.
message DeleteReportTemplateResponse {
}

// A report template.
message UserProfileFieldsTemplate {
  optional int64 registration_date_from = 1;
  optional int64 registration_date_to = 2;
  optional int64 crm_status = 3;
  optional string first_name_reg = 4;
  optional string last_name_reg = 5;
  optional string first_name_kyc = 6;
  optional string last_name_kyc = 7;
  optional string email = 8;
  optional string manager = 9;
  optional string country_reg = 10;
  optional string country_reg_ip = 11;
  optional string country_poi = 12;
  optional string country_poa = 13;
  optional clients_crm.POIStatus poi_status = 14;
  optional clients_crm.POAStatus poa_status = 15;
  optional clients_crm.KYCStatus kyc_status = 16;

  optional string client_id = 19; // Client ID to search for

  string title = 31;
}

message UserProfileReportTemplate {
    UserProfileFieldsTemplate template = 1;
    UserProfileVisibleFields visible_fields = 2;
    repeated UserProfileFieldSortOrder order_by = 3;
}