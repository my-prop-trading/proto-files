syntax = "proto3";
package metatrader;
//import "google/protobuf/empty.proto";

enum MetatraderAccountError {
    Ok = 0;
    InternalError = 1;
}

message CreateAccountRequest {
    string FullName = 1;
    string TradePassword = 2;      
    string ViewPassword = 3; 
    string ClientId = 4;  
    int64 Leverage = 5;  
    optional string Email = 6;
    optional string Country = 7;
    string ProcessId = 8;
}

message CreateAccountResponseBody {
    int64 MetatraderLogin = 1;
}

message CreateAccountResponse {
    oneof response {
        metatrader.CreateAccountResponseBody Body = 1;
        metatrader.MetatraderAccountError Error = 2;
    } 
}

message ChangeAccountPasswordRequest {
    int64 MetatraderLogin = 1;
    string NewPassword = 2;      
}

message ChangeAccountPasswordResponse {
    bool Success = 1;
}

message DepositAccountRequest {
    int64 MetatraderLogin = 1;
    double Amount = 2;
    string Comment = 3;
    string ProcessId = 4;
}

message DepositAccountResponseBody {
    int64 MetatraderOrderId = 1;
}

message DepositAccountResponse {
    oneof response {
        metatrader.DepositAccountResponseBody Body = 1;
        metatrader.MetatraderAccountError Error = 2;
    } 
}

message WithdrawalAccountRequest{
    int64 MetatraderLogin = 1;
    double Amount = 2;
    string Comment = 3;
    string ProcessId = 4;
}

message WithdrawalAccountResponseBody {
    int64 MetatraderOrderId = 1;
}

message WithdrawalAccountResponse {
    oneof response {
        metatrader.WithdrawalAccountResponseBody Body = 1;
        metatrader.MetatraderAccountError Error = 2;
    } 
}

message GetAccountBalanceRequest {
    int64 MetatraderLogin = 1;
}

message GetAccountBalanceResponse {
    double Balance = 1;        // balance+credit
    double Equity = 2;         // equity
    double Margin = 3;         // margin requirements
    double MarginFree = 4;     // free margin
    double MarginLevel = 5;    // margin level
}

message CloseAccountRequest {
    int64 MetatraderLogin = 1;
    string ProcessId = 2;
}

message CloseAccountResponse {
    bool Success = 1;
}

message DisableAccountTradeRequest {
    int64 MetatraderLogin = 1;
    string ProcessId = 2;
}

message DisableAccountTraderResponse {
    bool Success = 1;
}


message GetAccountsBalanceRequest {

}

message BalanceModel {
    int64 MetatraderLogin = 1;
    int64 Leverage = 2;        // user leverage
    double Balance = 3;        // balance+credit
    double Equity = 4;         // equity
    double Margin = 5;         // margin requirements
    double MarginFree = 6;     // free margin
    double MarginLevel = 7;    // margin level
}

message AccountsBalanceModel {
    repeated BalanceModel Balances = 1;
}

message GetAccountsBalanceResponse {
    oneof request {
        metatrader.AccountsBalanceModel Body = 1;
        metatrader.MetatraderAccountError Error = 2;
    }
}

service MetatraderAccountGrpcService {
    rpc CreateAccount(metatrader.CreateAccountRequest) 
    returns (metatrader.CreateAccountResponse);

    rpc ChangeAccountTradePassword(metatrader.ChangeAccountPasswordRequest) 
    returns (metatrader.ChangeAccountPasswordResponse);

    rpc ChangeAccountViewPassword(metatrader.ChangeAccountPasswordRequest) 
    returns (metatrader.ChangeAccountPasswordResponse);

    rpc DepositAccount(metatrader.DepositAccountRequest) 
    returns (metatrader.DepositAccountResponse);

    rpc WithdrawalAccount(metatrader.WithdrawalAccountRequest) 
    returns (metatrader.WithdrawalAccountResponse);

    rpc GetAccountBalance(metatrader.GetAccountBalanceRequest) 
    returns (metatrader.GetAccountBalanceResponse);

    rpc CloseAccount(metatrader.CloseAccountRequest) 
    returns (metatrader.CloseAccountResponse);

    rpc DisableAccountTrade(metatrader.DisableAccountTradeRequest) 
    returns (metatrader.DisableAccountTraderResponse);

    rpc GetAccountsBalance(stream metatrader.GetAccountsBalanceRequest) 
    returns (stream metatrader.GetAccountsBalanceResponse);
}
