syntax = "proto3";
package trader_account_history;
import "google/protobuf/empty.proto";

message TraderAccountHistoryLogsRequest {
    repeated TraderAccountUpdateLog TraderAccountUpdateLogs = 1;
}

message TraderAccountHistoryLogsResponse {
}

message QueryTraderAccountHistoryLogsRequest {
    string ClientId = 1;
    uint64 Offset = 2;
    uint64 Limit = 3;

    string TraderAccountAggregatedId = 4;
}

message QueryTraderAccountHistoryLogsResponse {
    repeated TraderAccountUpdateLog TraderAccountUpdateLogs = 1;
}

message TraderAccountUpdateLog {
    string AccountId = 1;
    int32 ActionNumber = 2;
    string ClientId = 3;
    int64 CreatedDate = 4; // Assuming microseconds as int64
    int32 AccountType = 5;
    int32 PlatformId = 6;
    trader_account_history.UpdateLogDetails EventInfo = 7;
    int32 OrderInActionNumber = 8;
    string TraderAccountAggregatedId = 9;
}

message PhaseDetails {
    double CurrentEquity = 1;
    double CurrentBalance = 2;
    double CurrentProfit = 3;
    int32 DaysTraded = 4;
    optional LogPhaseType PhaseType  = 5;
}

message EmptyPhaseDetails {
}

message AccountBlockedDetails {
    string Manager = 1;
    BlockerType BlockerType = 2;
}

enum LogPhaseType {
    PHASE_1 = 0;
    PHASE_2 = 1;
    PHASE_3 = 2;
    LIVE = 3;
}

message NewsDetails {
    string Id = 1;
    string Event = 2;
    int64 EventDate = 3;
    repeated string Trades = 4; 
    string Message = 5;
    PhaseDetails PhaseDetails = 6;
}

enum BlockerType {
    NoBlocker = 0;
    BlockTrades = 1;
    BlockTradesAndFuture = 2;
    BlockTradesAndFutureAndCurrent = 4;
}

message ManualTraderAccountGranted{
    string Manager = 1;
    string TradingPackageTitle = 2;
    string TradingPackageId = 3;
    int32 NumberOfPhases = 4;
    int32 PassedPhasesMarked = 5;
}

//Date and time - manager - Reactivated with adding/removing {{balance}} usd - comment

message AccountReactivatedDetails {
    string Manager = 1;
    double Amount = 2;
    string Comment = 3;
}

//Date and time - manager - Balance correction for {{amount}} usd - comment.

message BalanceCorrectionDetails {
    string Manager = 1;
    double Amount = 2;
    string Comment = 3;
}

message UpdateLogDetails {
    oneof Event {
        trader_account_history.PhaseDetails WinInPhase1 = 1;
        trader_account_history.PhaseDetails WinInPhase2 = 2;
        trader_account_history.PhaseDetails LoseInPhase1 = 3;
        trader_account_history.PhaseDetails LoseInPhase2 = 4;
        trader_account_history.PhaseDetails LoseInLive = 5;
        trader_account_history.EmptyPhaseDetails KycRequiredStatusSet = 6;
        trader_account_history.EmptyPhaseDetails Phase2AccountGranted = 7;
        trader_account_history.EmptyPhaseDetails Phase1AccountGranted = 8;
        trader_account_history.EmptyPhaseDetails LiveAccountGranted = 9;
        trader_account_history.AccountBlockedDetails AccountBlocked = 10;
        trader_account_history.AccountBlockedDetails AccountUnBlocked = 11;
        trader_account_history.EmptyPhaseDetails UserOpenedFirstPositionInPhase1 = 12;
        trader_account_history.EmptyPhaseDetails UserOpenedFirstPositionInPhase2 = 13;
        trader_account_history.EmptyPhaseDetails UserOpenedFirstPositionInLive = 14;
        //For phase 3 demo accounts
        trader_account_history.EmptyPhaseDetails UserOpenedFirstPositionInPhase3 = 15;
        trader_account_history.PhaseDetails WinInPhase3 = 16;
        trader_account_history.PhaseDetails LoseInPhase3 = 17;
        trader_account_history.EmptyPhaseDetails Phase3AccountGranted = 18;
        trader_account_history.NewsDetails NewsTradingRestrictionViolation = 19;
        trader_account_history.ManualTraderAccountGranted ManualTraderAccountGranted = 20; 
        trader_account_history.AccountReactivatedDetails AccountReactivated = 21;
        trader_account_history.BalanceCorrectionDetails BalanceCorrection = 22;

    }
}

service TraderAccountHistoryGrpcService {
    rpc InsertTraderAccountHistoryLogs(trader_account_history.TraderAccountHistoryLogsRequest) 
    returns (trader_account_history.TraderAccountHistoryLogsResponse);

    rpc QueryTraderAccountHistoryLogs(trader_account_history.QueryTraderAccountHistoryLogsRequest) 
    returns (trader_account_history.QueryTraderAccountHistoryLogsResponse);

    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
