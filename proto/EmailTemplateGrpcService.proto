syntax = "proto3";
package email_template;
import "google/protobuf/empty.proto";

// Define the protobuf enum
enum EmailType {
    REGISTRATION_CONFIRMATION = 0;
    FORGOT_PASSWORD = 1;
    PASSWORD_RESET_NOTIFICATION = 2;
    SUCCESSFUL_SCENARIO_PHASE1 = 3;
    SUCCESSFUL_SCENARIO_PHASE2 = 4;
    SUCCESSFUL_SCENARIO_PHASE2_KYC_REQUIRED = 5;
    SUCCESSFUL_SCENARIO_PHASE2_CONTRACT_REQUIRED = 6;
    SUCCESSFUL_PROOF_OF_IDENTITY = 7;
    RETRY_PROOF_OF_IDENTITY = 8;
    FAILED_PROOF_OF_IDENTITY = 9;
    SUCCESSFUL_PROOF_OF_ADDRESS = 10;
    RETRY_PROOF_OF_ADDRESS = 11;
    FAILED_PROOF_OF_ADDRESS = 12;
    CONTRACT_TO_CLIENT = 13;
    SERVICE_DENIED_DUE_TO_VIOLATION_TERMS_AND_COND_ON_CONTRACT_SIGNING = 14;
    SERVICE_DENIED_ON_ALL_ACCOUNTS_DUE_TO_VIOLATION_TERMS_AND_COND = 15;
    SERVICE_DENIED_DUE_TO_VIOLATION_OF_OUR_TERMS_AND_COND = 16;
    SERVICE_DENIED_DUE_TO_VIOLATION_OF_OUR_TERMS_AND_COND_FUTURE_PROFIT_BLOCKED = 17;
    SERVICE_DENIED_DUE_TO_VIOLATION_OF_OUR_TERMS_AND_COND_FUTURE_AND_CURRENT_PROFIT_BLOCKED = 18;
    LIVE_ACCOUNT_GRANTED = 19;
    LIVE_ACCOUNT_LOST = 20;
    PAYMENT_RECEIVED = 21;
    PAYMENT_FAILED = 22;
    FAILED_SCENARIO_PHASE1 = 23;
    FAILED_SCENARIO_PHASE2 = 24;
    PAYOUT_SUCCESS = 25;
    PAYOUT_DECLINED = 26;
    PROFIT_SPLIT_DAY = 27;
    REVENUE_SHARE_TAKEN = 28;
    SUCCESSFUL_SCENARIO_PHASE3 = 29;
    SUCCESSFUL_SCENARIO_PHASE1_KYC_REQUIRED = 30;
    SUCCESSFUL_SCENARIO_PHASE1_CONTRACT_REQUIRED = 31;
    SUCCESSFUL_SCENARIO_PHASE3_KYC_REQUIRED = 32;
    SUCCESSFUL_SCENARIO_PHASE3_CONTRACT_REQUIRED = 33;
    FAILED_SCENARIO_PHASE3 = 34;
    PAYMENT_RECEIVED_INSTANT_FUNDING_KYC_REQUIRED = 35;
    PAYMENT_RECEIVED_INSTANT_FUNDING_CONTRACT_REQUIRED = 36;
    DEMO_ACCOUNT_BLOCK = 37;
    DEMO_ACCOUNT_UNBLOCK = 38;
    REACTIVATE_ACCOUNT = 39;
    REGISTRATION_SUCCESSFUL_WITHOUT_PASSWORD = 40;
}

enum Error {
    OK = 0;
    INTERNAL_ERROR = 1;
    EMAIL_PROVIDER_ERROR = 2;
    NO_TEMPLATE_FOR_EMAIL = 3;
    DEFAULT_LANGUAGE_CANNOT_BE_DELETED = 4;
}

enum ReceiverType
{
    NOBODY = 0;
    ALL = 1;
    ONLY_MANAGERS = 2;
}

message PlaceholderKeyValue {
    string Key = 1;
    string Value = 2;
}

message GetTemplateRequest {
    EmailType EmailType = 1;
    string LanguageIso2 = 2;
}

message GetTemplateResponse {
    optional TemplateModel Template = 1;
}

message TemplateModel {
    EmailType EmailType = 1;
    string LanguageIso2 = 2;
    string Name = 3;
    string Subject = 4;
    string HtmlContent = 5;
    string PlainContent = 6;
    optional string TemplateProviderId = 7;
    repeated string Placeholders = 8;
    ReceiverType ReceiverType = 9;
}

message GetAllTemplateRequest {
    optional string LanguageIso2 = 1; 
}

message GenerateTemplateRequest {
    EmailType EmailType = 1;
    string LanguageIso2 = 2;
}

message GenerateTemplateResponse {
    oneof response {
        GenerateTemplateResponseBody Body = 1;
        Error Error = 2;
    } 
}

message GenerateTemplateResponseBody {
    string TemplateProviderId = 1; 
}

message ReloadFromDefaultTemplateRequest {
    EmailType EmailType = 1;
    string LanguageIso2 = 2;
    string TemplateProviderId = 3;
}

message ReloadFromDefaultTemplateResponse {
    oneof response {
        ReloadFromDefaultTemplateResponseBody Body = 1;
        Error Error = 2;
    } 
}

message ReloadFromDefaultTemplateResponseBody {
    optional string TemplateVersionId = 1; 
}

message GetTemplateEditLinkRequest {
    string TemplateProviderId = 3;
}

message GetTemplateEditLinkResponse {
    oneof response {
        GetTemplateEditLinkResponseBody Body = 1;
        Error Error = 2;
    } 
}

message GetTemplateEditLinkResponseBody {
    optional string EditLink = 1; 
}

message SendEmailTemplateRequest {
    string TemplateProviderId = 1;
    string EmailFrom = 2;
    string EmailTo = 3;
    repeated PlaceholderKeyValue Placeholders = 4;
    string Subject = 5;
    optional string EmailFromName = 6;
    optional string ClientId = 7;
}

message SendEmailTemplateResponse {
    oneof response {
        SendEmailTemplateResponseBody Body = 1;
        Error Error = 2;
    } 
}

message SendEmailTemplateResponseBody {

}

message BrandSettingsModel {
    string LogoUrl = 1;
    string PolicyUrl = 2;
    string TermsUrl = 3;
    string AboutUrl = 4;
    string SupportUrl = 5;
    string ColorUrl = 6;
    string BrandName = 7;
    string BrandCopyrights = 8;
    string FaviconUrl = 9;
    string RefundPolicyUrl = 10;
    string TitleUrl = 11;
    string TradingPackagesUrl = 12;
    string HomePageUrl = 13;
    string VerificationUrl = 14;
    string PayoutsPageUrl = 15;
    string CompanyName = 16;
    string EmailFrom = 17;
    string EmailCc = 18;
    string EmailBcc = 19;
    map<string, string> Languages = 20;
    string LoginUrl = 21;
    optional string LiveChatLicense = 23;
    string StylesCssUrl = 24;
    optional bool HideAffiliateMenu = 26;
    optional string MailLogoUrl = 27;
    optional string MailSuccessPictureUrl = 28;
    optional string MailFailPictureUrl = 29;
    optional string AffiliateUrl = 30;
    optional string DiscordUrl = 31;
    optional bool HideDiscordMenu = 32;
    optional string GoogleTagManagerKey = 33;
    optional bool HideGoogleTag = 34;
    optional bool HideEconomicCalendarMenu = 35;
    optional string DisclaimerUrl = 36;
    optional string CookiePolicyUrl = 37;
    optional string EmailFromName = 38;
    optional string ContractManagerEmail = 39;
    optional string RegistrationType = 40;
    optional string EconomicCalendarUrl = 41;
    optional string GoogleAdsFloodlightKey = 42;
    ChatWidget ChatWidget = 43;
}

message EmailSenderSettingsModel {
    string ApiKey = 1;
}

message ChatWidget {
    optional ChatSetting LiveChat = 1;
    optional ChatSetting ZenDesk = 2;
    optional bool HideWidget = 3;
}

message ChatSetting {
    string Key = 1;
}

message GetSettingsTemplateRequest {

}

message GetSettingsTemplateResponse {
    oneof response {
        GetSettingsTemplateResponseBody Body = 1;
        Error Error = 2;
    } 
}

message GetSettingsTemplateResponseBody {
    EmailSenderSettingsModel EmailSenderSettings = 1;
    BrandSettingsModel BrandSettings = 2;
}

message UpdateSettingsTemplateRequest {
    optional EmailSenderSettingsModel EmailSenderSettings = 1;
    optional BrandSettingsModel BrandSettings = 2;
}

message UpdateSettingsTemplateResponse {
    oneof response {
        UpdateSettingsTemplateResponseBody Body = 1;
        Error Error = 2;
    } 
}

message UpdateSettingsTemplateResponseBody {
    EmailSenderSettingsModel EmailSenderSettings = 1;
    BrandSettingsModel BrandSettings = 2;
}

message AddLanguageTemplateRequest {
    string LanguageIso2 = 1;
}

message AddLanguageTemplateResponse {
    oneof response {
        AddLanguageTemplateResponseBody Body = 1;
        Error Error = 2;
    } 
}

message AddLanguageTemplateResponseBody {
}


message DeleteLanguageTemplateRequest {
    string LanguageIso2 = 1;
}

message DeleteLanguageTemplateResponse {
    oneof response {
        DeleteLanguageTemplateResponseBody Body = 1;
        Error Error = 2;
    } 
}

message DeleteLanguageTemplateResponseBody {
    
}

message UpdateTemplateRequest {
    TemplateModel Template = 1;
    string OfficerId = 2;   
}

service EmailTemplateGrpcService {
    rpc Get(GetTemplateRequest) returns (GetTemplateResponse);
    rpc GetAll(GetAllTemplateRequest) returns (stream TemplateModel);
    rpc Generate(GenerateTemplateRequest) returns (GenerateTemplateResponse);
    rpc ReloadFromDefaultTemplate(ReloadFromDefaultTemplateRequest) returns (ReloadFromDefaultTemplateResponse);
    rpc GetTemplateEditLink(GetTemplateEditLinkRequest) returns (GetTemplateEditLinkResponse);
    rpc SendEmail(SendEmailTemplateRequest) returns (SendEmailTemplateResponse);
    rpc GetSettings(GetSettingsTemplateRequest) returns (GetSettingsTemplateResponse);
    rpc UpdateSettings(UpdateSettingsTemplateRequest) returns (UpdateSettingsTemplateResponse);
    rpc AddLanguage(AddLanguageTemplateRequest) returns (AddLanguageTemplateResponse);
    rpc DeleteLanguage(DeleteLanguageTemplateRequest) returns (DeleteLanguageTemplateResponse);
    rpc UpdateTemplate(UpdateTemplateRequest) returns (google.protobuf.Empty);

    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
