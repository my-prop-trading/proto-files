syntax = "proto3";
package rewards;
import "google/protobuf/empty.proto";

enum TaskStatus {
  Available = 0;
  InProgress = 1;
  Completed = 2;
  UnderReview = 3;
}

message RewardGrpcModel {
  string Id = 1;
  string IconUrl = 2;
  double RequiredPoints = 3;
  string Name = 4;
  string Description = 5;
  optional string ClientId = 6;
  int64 CreatedAt = 7;
  int64 UpdatedAt = 8;
  int64 ExpireDate = 9;
}

message GetRewardsPageGrpcRequest {
  int32 Limit = 1;
  int32 Offset = 2;
  optional string ClientId = 3;
}

message GetRewardsPageGrpcResponse {
  repeated RewardGrpcModel items = 1;
}

message TaskGrpcModel {
  string Id = 1;
  string IconUrl = 2;
  double RewardPoints = 3;
  string Name = 4;
  string Description = 5;
  int64 CreatedAt = 6;
  int64 UpdatedAt = 7;
  optional string ClientId = 8;
  int64 ExpireDate = 9;
  TaskStatus Status = 10;
}

message GetTasksPageGrpcRequest {
  int32 limit = 1;
  int32 offset = 2;
  optional string ClientId = 3;
}

message GetTasksPageGrpcResponse {
  repeated TaskGrpcModel items = 1;
}

message BalanceGrpcModel {
  string ClientId = 1;
  double AvailablePoints = 2;
  int64 CreatedAt = 3;
  int64 UpdatedAt = 4;
}

message GetBalanceGrpcRequest {
  string ClientId = 1;
}

message GetBalanceGrpcResponse {
  BalanceGrpcModel item = 1;
}

message CompleteTaskGrpcRequest {
  string ClientId = 1;
  string TaskId = 2;
}

message CompleteTaskGrpcResponse {
  optional string ErrorMessage = 1;
}

message ClaimRewardGrpcRequest {
  string ClientId = 1;
  string RewardId = 2;
}

message ClaimRewardGrpcResponse {
  optional string ErrorMessage = 1;
}

message ApproveTaskGrpcRequest {
  string ManagerId = 1;
  string TaskId = 2;
  string ClientId = 3;
}

message ApproveTaskGrpcResponse {
  optional string ErrorMessage = 1;
}

service RewardsGrpcService {
    rpc GetRewardsPage(GetRewardsPageGrpcRequest) returns (GetRewardsPageGrpcResponse);
    rpc GetTasksPage(GetTasksPageGrpcRequest) returns (GetTasksPageGrpcResponse);
    rpc GetBalance(GetBalanceGrpcRequest) returns (GetBalanceGrpcResponse);
    rpc CompleteTask(CompleteTaskGrpcRequest) returns (CompleteTaskGrpcResponse);
    rpc ApproveTask(ApproveTaskGrpcRequest) returns (ApproveTaskGrpcResponse);
    rpc ClaimReward(ClaimRewardGrpcRequest) returns (ClaimRewardGrpcResponse);

    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
