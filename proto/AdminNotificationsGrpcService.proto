syntax = "proto3";
package admin_notifications;
import "google/protobuf/empty.proto";

enum AdminNotificationTriggerGrpc {
    CARD_MULTIPLE_GEOS = 0;
    CARD_SHARED_NAME = 1;
    PAYIN_FAIL_PAIN_PATTERN = 2;
    EXCESSIVE_ACTIVE_ACCOUNTS = 3;
    LARGE_ACCOUNT_SIZE = 4;
    FAST_SUCCESS_PAYIN_SEQUENCE = 6;
    EXCESSIVE_SUCCESSFUL_PAYINS = 7;
    FAST_AFFILIATE_PAYMENTS = 8;
    MULTIACCOUNT = 9;
}

enum AdminNotificationStatusGrpc {
    NEW = 0;
    NOTIFIED = 1;
}

message AdminNotificationGrpcModel {
    string id = 1;
    int64 created_at = 2;
    int64 updated_at = 3;
    AdminNotificationStatusGrpc status = 4;
    AdminNotificationTriggerGrpc trigger = 5;
    string client_id = 6;
    optional string order_id = 7;
    optional string trader_account_id = 8;
    map<string, string> metadata = 9;
    string category_name = 10;
}

message GetAdminNotificationsGrpcRequest {
    repeated AdminNotificationStatusGrpc statuses = 1;
    repeated AdminNotificationTriggerGrpc triggers = 2;
    repeated string client_ids = 3;
    repeated string order_ids = 4;
    repeated string trader_account_ids = 5;
}

message GetAdminNotificationsGrpcResponse {
    repeated AdminNotificationGrpcModel items = 1;
}

message AdminNotificationCategoryGrpcModel {
    string id = 1;
    string name = 2;
    string slack_url = 3;
}

message GetAdminNotificationCategoriesGrpcRequest {}

message GetAdminNotificationCategoriesGrpcResponse {
    repeated AdminNotificationCategoryGrpcModel items = 1;
}

service AdminNotificationsGrpcService {
    rpc GetNotifications(GetAdminNotificationsGrpcRequest) returns (GetAdminNotificationsGrpcResponse);
    rpc GetCategories(GetAdminNotificationCategoriesGrpcRequest) returns (GetAdminNotificationCategoriesGrpcResponse);
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
