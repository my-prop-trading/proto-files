syntax = "proto3";
package trader_credentials;
import "google/protobuf/empty.proto";

message RegisterTraderRequest{
    string ProcessId = 1;
    string Email = 2;
    string Password = 3;
    string Brand = 4;
}

enum ResponseStatus{
    Ok = 0;
    TraderExists = 1;
    InvalidUsernameOrPassword = 2;
    TraderNotFound = 3;
    PasswordIsWrong = 4;
    PasswordWasAlreadyUsed = 5;
    TraderIsNotVerified = 6;
    InvalidCode = 7;
    TraderIsAlreadyVerified = 8;
    LimitForRetryReached = 9;
}

message RegisterTraderResponse{
    trader_credentials.ResponseStatus Status = 1;
    optional string TraderId = 2;
}

message VerifyTraderPasswordRequest{
    string Email = 1;
    string Password = 2;
    string Brand = 3;
}

message VerifyTraderPasswordResponse{
    trader_credentials.ResponseStatus Status = 1;
    optional string TraderId = 2;
}

message ResolveEmailByIdRequest{
    string TraderId = 1;
    string Brand = 2;
}

message ResolveEmailByIdResponse{
    trader_credentials.ResponseStatus Status = 1;
    optional string Email = 2;
    optional string Brand = 3;
}

message ChangePasswordWithCurrentPasswordRequest{
    string TraderId = 1;
    string Brand = 2;
    string OldPassword = 3;
    string NewPassword = 4;
}

message ChangePasswordWithCurrentPasswordResponse{
    trader_credentials.ResponseStatus Status = 1;
}

message SearchByIdOrEmailRequest{
    string Phrase = 1;
}

message SearchEmailByIdModel{
    string TraderId = 1;
    string Brand = 2;
    string Email = 3;
}

message SearchByIdOrEmailResponse{
    repeated SearchEmailByIdModel Ids = 1;
}

message ForgotPasswordRequest {
    string Email = 1;
    string Brand = 2;
}

message ForgotPasswordResponse {
    
}

message ResetPasswordWithCodeRequest {
    string Code = 1;
    string NewPassword = 2;
    string Brand = 3;
    string Email = 4;
}

message ResetPasswordWithCodeResponse {
    bool Reseted = 1;
}

message VerifyTraderEmailRequest {
    string Code = 1;
    string Brand = 2;
    string Email = 3;
}

message VerifyTraderEmailResponse {
    trader_credentials.ResponseStatus Status = 1;
    optional string TraderId = 2;
}

message ResendVerifyTraderEmailRequest {
    string Email = 1;
    string Brand = 2;
}

message ResendVerifyTraderEmailResponse {
    trader_credentials.ResponseStatus Status = 1;
    optional string TraderId = 2;
}

service TraderCredentialsGrpcService {
    rpc Register(trader_credentials.RegisterTraderRequest) returns (trader_credentials.RegisterTraderResponse);
    rpc VerifyPassword(trader_credentials.VerifyTraderPasswordRequest) returns (trader_credentials.VerifyTraderPasswordResponse);
    rpc ResolveEmailById(trader_credentials.ResolveEmailByIdRequest) returns (trader_credentials.ResolveEmailByIdResponse);   
    rpc SearchByIdOrEmail(SearchByIdOrEmailRequest) returns (SearchByIdOrEmailResponse);   
    rpc ChangePasswordWithCurrentPassword(trader_credentials.ChangePasswordWithCurrentPasswordRequest) returns (trader_credentials.ChangePasswordWithCurrentPasswordResponse);
    
    rpc ForgotPassword(trader_credentials.ForgotPasswordRequest) returns (trader_credentials.ForgotPasswordResponse);
    rpc ResetPasswordWithCode(trader_credentials.ResetPasswordWithCodeRequest) returns (trader_credentials.ResetPasswordWithCodeResponse);
    rpc VerifyEmail(trader_credentials.VerifyTraderEmailRequest) returns (trader_credentials.VerifyTraderEmailResponse);
    rpc ResendVerifyEmail(trader_credentials.ResendVerifyTraderEmailRequest) returns (trader_credentials.ResendVerifyTraderEmailResponse);
    
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
