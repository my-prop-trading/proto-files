syntax = "proto3";
package trader_packages;
//import "google/protobuf/empty.proto";

message TraderPackage {
    string Id = 1;

    string Title = 2;
    double AccountBalance = 3;
    string AccountBalanceCurrency = 4;
    double Price = 5;
    string PriceCurrency = 6;
    int32 Leverage = 7;
    string Label = 8;

    double Phase1DailyDrawdown = 9;
    double Phase1OverallDrawdown = 10;
    double Phase1TargetProfit = 11;
    int32 Phase1Duration = 12;
    optional int32 Phase1MinTradingDays = 13;
    optional int32 Phase1MinOpenedPositions = 14;
    optional double Phase1RevenueShare = 15;
    double Phase1Refund = 16;
    repeated trader_packages.TraderPackageAttempt Phase1Attempts = 17;

    double Phase2DailyDrawdown = 19;
    double Phase2OverallDrawdown = 20;
    double Phase2TargetProfit = 21;
    int32 Phase2Duration = 22;
    optional int32 Phase2MinTradingDays = 23;
    optional int32 Phase2MinOpenedPositions = 24;
    optional double Phase2RevenueShare = 25;
    double Phase2Refund = 26;
    repeated trader_packages.TraderPackageAttempt Phase2Attempts = 27;

    double DailyDrawdown = 30;
    double OverallDrawdown = 31;
    double RevenueScaling = 32;
}

message TraderPackageAttempt {
    string Id = 1;
    string TradingPackageId = 2;
    double Price = 3;
    string PriceCurrency = 4;
    int32 Number = 5;
}

message TraderPackageFieldsOrder {
  string TraderPackageId = 1;
  optional int32 Phase1DailyDrawdown = 9;
  optional int32 Phase1OverallDrawdown = 10;
  optional int32 Phase1TargetProfit = 11;
  optional int32 Phase1Duration = 12;
  optional int32 Phase1MinTradingDays = 13;
  optional int32 Phase1MinOpenedPositions = 14;
  optional int32 Phase1RevenueShare = 15;
  optional int32 Phase1Refund = 16;
  optional int32 Phase1Attempts = 17;

  optional int32 Phase2DailyDrawdown = 19;
  optional int32 Phase2OverallDrawdown = 20;
  optional int32 Phase2TargetProfit = 21;
  optional int32 Phase2Duration = 22;
  optional int32 Phase2MinTradingDays = 23;
  optional int32 Phase2MinOpenedPositions = 24;
  optional int32 Phase2RevenueShare = 25;
  optional int32 Phase2Refund = 26;
  optional int32 Phase2Attempts = 27;

  optional int32 DailyDrawdown = 30;
  optional int32 OverallDrawdown = 31;
  optional int32 RevenueScaling = 32;
  optional int32 TargetProfit = 33;
}

message GetAllRequest{
}

message GetAllResponse{
  repeated trader_packages.TraderPackage Items = 1;
}

message SetRequest{
  trader_packages.TraderPackage Item = 1;
}

message SetResponse {
  bool Success = 1;
}

message SetTraderPackageFieldsOrderRequest {
  trader_packages.TraderPackageFieldsOrder Item = 1;
}

message SetTraderPackageFieldsOrderResponse {
  bool Success = 1;
}

message DeleteRequest{
  string TraderPackageId = 1;
}

message DeleteResponse {
  bool Success = 1;
}

message PublishRequest{
  string TraderPackageId = 1;
}

message PublishResponse {
  bool Success = 1;
}


service TraderPackagesGrpcService {
    rpc GetAll(trader_packages.GetAllRequest) returns (trader_packages.GetAllResponse);
    rpc GetAllPublished(trader_packages.GetAllRequest) returns (trader_packages.GetAllResponse);
    rpc Set(trader_packages.SetRequest) returns (trader_packages.SetResponse);
    rpc Delete(trader_packages.DeleteRequest) returns (trader_packages.DeleteResponse);
    rpc Publish(trader_packages.PublishRequest) returns (trader_packages.PublishResponse);

    rpc SetTraderPackageFieldsOrder(trader_packages.SetTraderPackageFieldsOrderRequest) returns (trader_packages.SetTraderPackageFieldsOrderResponse);
}
