syntax = "proto3";
package trader_accounts;
//import "google/protobuf/empty.proto";


message TraderAccount {
    string Id = 1;
    string Title = 2;
    int32 Phase = 3;
    trader_accounts.TradingPlatformModel TradingPlatformModel = 4;
    double Balance = 5;
    optional int64 StartDate = 6;
    optional int64 EndDate = 7;
    string ClientId = 8;
    string AggregatedId = 9;
    int64 CreatedAt = 10;
    int64 UpdatedAt = 11;
    trader_accounts.TraderAccountStatusModel Status = 12;
}

enum TraderAccountStatusModel {
  NEW = 0;
  ACTIVE = 1;
  DIABLED = 2;
  STAGE_COMPLETED = 3;
}

enum TradingPlatformModel {
  META_TRADER_4 = 0;
  META_TRADER_5 = 1;
}

enum BrokerModel {
  WELLTRADE = 0;
}

message GetByClientIdRequest{
  string ClientId = 1;
}

message GetByClientIdResponse{
  repeated trader_accounts.TraderAccount Items = 1;
}

message CreateTraderAccountRequest {
    string TradingPackageId = 1;
    trader_accounts.TradingPlatformModel TradingPlatform = 2;
    trader_accounts.BrokerModel BrokerModel = 3;
    // NOT USED
    //string FirstName = 4;
    //string LastName = 5;
    //string City = 6;
    //string Country = 7;
    //string ZipCode = 8;
    //string Address = 9;
    //string Phone = 10;
    //optional string DiscountCode = 11;
    string ClientId = 12;
    string ProcessId = 13;
    string OrderId = 14;
}

message CreateTraderAccountResponse{
  string OrderId = 1;
}

message GetTraderAccountCredentialsRequest {
  string ClientId = 1;
  string AccountId = 2;
}

message GetTraderAccountCredentialsResponse {
  oneof response {
    trader_accounts.GetTraderAccountCredentialsResponseBody Body = 1;
    trader_accounts.TraderAccountError Error = 2;
  }
}

message GetTraderAccountCredentialsResponseBody {
  string ClientId = 1;
  string AccountId = 2;
  string TradePassword = 3;      
  string ViewPassword = 4; 
  int64 Login = 5;
  string Server = 6;
}

message GetTraderAccIdByCredentialsLoginRequest {
  repeated int64 Logins = 1;
}

message GetTraderAccIdByCredentialsLoginResponse {
  repeated trader_accounts.LoginTradAccId LoginTradAccIds = 1;
}

message LoginTradAccId {
  int64 Login = 1;
  string TraderAccId = 2;
}

enum TraderAccountError {
  OK = 0;
  NO_ACCOUNT = 1;
  NO_TRADING_PACKAGE = 2;
  UNAUTHORIZED = 3;
  NO_PERSONAL_DATA = 4;
}


service TraderAccountsGrpcService {
    rpc GetByClientId(trader_accounts.GetByClientIdRequest) returns (trader_accounts.GetByClientIdResponse);
    rpc GetTraderAccIdByCredentialsLogin(trader_accounts.GetTraderAccIdByCredentialsLoginRequest) returns (trader_accounts.GetTraderAccIdByCredentialsLoginResponse);
    rpc CreateTraderAccount(trader_accounts.CreateTraderAccountRequest) returns (trader_accounts.CreateTraderAccountResponse);
    rpc GetTraderAccountCredentials(trader_accounts.GetTraderAccountCredentialsRequest) returns (trader_accounts.GetTraderAccountCredentialsResponse);
}
