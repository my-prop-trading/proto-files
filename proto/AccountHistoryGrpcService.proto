syntax = "proto3";
package account_history;
import "google/protobuf/empty.proto";

enum TradeTypeModel {
  BUY = 0;
  SELL = 1;
  BUY_LIMIT = 2;
  SELL_LIMIT = 3;
  BUY_STOP = 4;
  SELL_STOP = 5;
  BALANCE = 6;
  CREDIT = 7;
}

enum AccountType {
  DEMO = 0;
  LIVE = 1;
}

message GetTradesPageRequest {
  uint64 Limit = 1;
  uint64 Offset = 2;
  optional uint64 FromDate = 3;
  optional uint64 ToDate = 4;
}

message GetTradesPageResponse {
  repeated AccountTradeModel Items = 1;
}

message AccountTradeModel {
  string Id = 1;            
  string PlatfomAccountId = 4;
  string TraderAccountId = 5;
  string Symbol = 6;
  int64 Digits = 7;
  account_history.TradeTypeModel TradeType = 8;
  double Lots = 9;
  int64 OpenTime = 10;        
  double OpenPrice = 11;
  double Sl = 12;
  double Tp = 13;
  optional int64 CloseTime = 14;       
  double Fee = 15;
  double Swap = 16;
  double ClosePrice = 17;
  double Profit = 18;
  double Taxes = 19;
  string Comment = 20;
  int64 Timestamp = 21;    
  int32 PlatformId = 22;
  AccountType AccountType = 23;
  string ClientId = 24;
}

message GetByTraderAccountIdRequest {
  string TraderAccountId = 1;
  uint64 Limit = 2;
  uint64 Offset = 3;
}

message GetByTraderAccountIdResponse {
  repeated AccountTradeModel Items = 1;
  uint64 TotalCount = 2;
}

message GetByTraderAccountIdWithTotalCountRequest {
  string TraderAccountId = 1;
  uint64 Limit = 2;
  uint64 Offset = 3;
}

message GetByTraderAccountIdWithTotalCountResponse {
  repeated AccountTradeModel Items = 1;

  uint64 TotalCount = 2;
}

enum AccountHistoryError {
  OK = 0;
  NO_ACCOUNT = 1;
}

message GetTradesBySymbolsRequest {
  repeated string Symbols = 1;
  optional int64 FromDate = 2;
  optional int64 ToDate = 3;
  int32 PlatformId = 4;
}

message InsertOrUpdateGrpcRequest {
  repeated AccountTradeModel items = 1;
}

message InsertOrUpdateGrpcResponse {
}

message CloseAllTradesRequest {
  string TraderAccountId = 1;
}

message CloseAllTradesResponse {
  int32 Count = 1;
}

service AccountHistoryGrpcService {
    rpc GetByTraderAccountId(GetByTraderAccountIdRequest) returns (GetByTraderAccountIdResponse);
    rpc GetByTraderAccountIdWithTotalCount(GetByTraderAccountIdWithTotalCountRequest) returns (GetByTraderAccountIdWithTotalCountResponse);
    rpc GetTradesBySymbols(GetTradesBySymbolsRequest) returns (stream AccountTradeModel);
    rpc InsertOrUpdate(InsertOrUpdateGrpcRequest) returns (InsertOrUpdateGrpcResponse);
    rpc CloseAll(CloseAllTradesRequest) returns (CloseAllTradesResponse);
    rpc GetTradesPage(GetTradesPageRequest) returns (GetTradesPageResponse);

    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}
